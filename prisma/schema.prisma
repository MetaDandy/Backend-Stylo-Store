// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Product{
  id Int @unique @default(autoincrement())
  name String @unique
  price Float @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  category Category @relation(fields: [categoryId],references: [id])
  categoryId Int
}

model Category{
  id Int @unique @default(autoincrement())
  name String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  products Product[]
}

model Role{
  id Int @unique @default(autoincrement())
  name String @unique @db.VarChar(20)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  deletedAt DateTime?
  assignedRole AssignedRole[]

  @@index([name])
}

model User{
  id Int @unique @default(autoincrement())
  name String @db.VarChar(50)
  email String @unique @db.VarChar(75)
  password String @db.VarChar(255)
  phone String @db.VarChar(15)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  deletedAt DateTime?
  assignedRole AssignedRole[]

  @@index([email])
}

model AssignedRole{
  id Int @unique @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  deletedAt DateTime?
  role Role @relation(fields: [roleId],references: [id])
  roleId Int
  user User @relation(fields: [userId],references: [id])
  userId Int
}